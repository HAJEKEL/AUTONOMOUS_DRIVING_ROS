<launch> <!-- Insertion of the root element-->
<!--
This launch file allows to run the master, the node "control_barrel_world_node" and the node "pcl_obstacle_detector_node" to run at once.

-->
    <!--Declaring the existence of arguments "gazebo_gui", "world_name" and "rviz"-->
    <arg name="gazebo_gui" default="false"/>
	<arg name="world_name" default="barrels.world"/>
    <arg name="rviz" default="true"/>
    <!--Including the contents of the launch file simulation_barrel_world.launch, including all of its nodes and parameters using a find statement to find the package car_simulations.-->
	<include file="$(find car_simulation)/launch/simulation_barrel_world.launch">
		<arg name="gazebo_gui" default="$(arg gazebo_gui)"/>
		<arg name="world_name" default="$(arg world_name)"/>
		<arg name="rviz" value="$(arg rviz)" />
	</include>

    <!--Node element for control_barrel_world_node-->
    <!--Directing standard output to the console instead of the log files-->
    <!--Declaring that the node is required causing roslaunch to terminate all nodes and exit itself when this node is terminated-->
    <node
        pkg="control_barrel_world"
        type="control_barrel_world_node"
        name="control_barrel_world_node"
        output ="screen"
        launch-prefix = "xterm -e"
        required = "true"
    />
   <!--Node element for pcl_obstacle_detector_node-->
   <!--Directing standard output to the console instead of the log files-->
   <!--Declaring that the node is required causing roslaunch to terminate all nodes and exit itself when this node is terminated-->
   <!--Launching the node in its own simple terminal window and executing the remainder of its command line using the launch-prefix "xterm-e"-->
    <node
        pkg="pcl_obstacle_detector"
        type="pcl_obstacle_detector_node"
        name="pcl_obstacle_detector_node"
        launch-prefix="xterm -e"
        output ="screen"
        required="true"
    />

</launch>
